{"version":3,"sources":["images/icon.png","images/gorgeous-line-top.png","images/gorgeous-line-bottom.png","images/certificate-stamp.png","images/facebook-icon.svg","images/twitter-icon.svg","images/mail-icon.svg","utils/hex.js","utils/common.js","components/Home.js","utils/getWeb3.js","utils/getContractInstance.js","components/Certificate.js","utils/sendTransaction.js","components/IssuePage.js","components/App.js","index.js"],"names":["module","exports","toHex","str","s","unescape","encodeURIComponent","h","i","length","charCodeAt","toString","fromHex","String","fromCharCode","parseInt","substr","decodeURIComponent","escape","TWEET_TXT","builURL","l","window","location","appName","pathname","split","origin","replace","buildMLink","subject","body","href","langIsJa","navigator","language","Home","state","bride","groom","lang","componentDidMount","setState","handleChange","e","target","name","value","validation","this","canIssue","className","src","IconImg","alt","width","height","en","ja","type","placeholder","required","onChange","to","Component","getWeb3","Promise","resolve","reject","a","ethereum","web3","Web3","enable","console","log","Error","getContractInstance","contractDefinition","eth","net","getId","networkId","deployedAddress","networks","address","instance","Contract","abi","Certificate","cerID","txHash","issuedDate","Date","toLocaleDateString","params","props","match","isSample","getAccounts","accounts","contract","id","decodeCertificateID","methods","certificates","call","from","certificate","getTransactionReceipt","receipt","getBlock","blockNumber","block","timestamp","alert","message","error","path","LineTopImg","face","rel","CerImg","LineBottomImg","FacebookImg","TwitterImg","MailImg","hex","Number","sendTransaction","transaction","estimateGas","gas","options","data","encodeABI","gasPrice","send","blockHash","IssuePage","issuing","issued","handleClick","padTo32byte","FEE","fee","issueCertificate","events","Issued","returnValues","certificateID","transactionHash","document","getElementById","click","readOnly","disabled","role","aria-hidden","onClick","Id","padStart","App","basename","process","component","ReactDOM","render"],"mappings":"ys9EAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,kD,mBCA3CD,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,qLCCrCC,EAAQ,SAACC,GAIX,IAFA,IAAIC,EAAIC,SAASC,mBAAmBH,IAChCI,EAAI,GACCC,EAAI,EAAGA,EAAIJ,EAAEK,OAAQD,IAC1BD,GAAKH,EAAEM,WAAWF,GAAGG,SAAS,IAElC,OAAOJ,GAGLK,EAAU,SAACL,GAEb,IADA,IAAIH,EAAI,GACCI,EAAI,EAAGA,EAAID,EAAEE,OAAQD,GAAG,EAC7BJ,GAAKS,OAAOC,aAAaC,SAASR,EAAES,OAAOR,EAAG,GAAI,KAGtD,OAAOS,mBAAmBC,OAAOd,KChB/Be,EAAY,0EAGZC,EAAU,WACd,IAAMC,EAAIC,OAAOC,SACXC,EAAUH,EAAEI,SAASC,MAAM,KAAK,GACtC,OAAOpB,mBAAmB,GAAD,OAAIe,EAAEM,OAAN,YAAgBH,EAAhB,gBAA+BH,EAAEI,SAASG,QAAX,WAAuBJ,EAAvB,KAAkC,OAetFK,EAAa,WACjB,IAAMC,EAAUxB,mBArBC,iDAsBXyB,EAAOzB,mBAAmB,GAAD,OAAIa,EAAJ,aAAkBG,OAAOC,SAASS,OACjE,MAAM,mBAAN,OAA0BF,EAA1B,iBAA0CC,IAOtCE,EAAW,iBAAoC,OAA9BX,OAAOY,UAAUC,U,iBC4DzBC,E,2MAlFbC,MAAQ,CACNC,MAAO,GACPC,MAAO,GACPC,KAAM,M,EAGRC,kBAAoB,kBAAM,EAAKC,SAAS,CAACF,KAAMP,IAAa,KAAO,EAAKI,MAAMG,Q,EAE9EG,aAAe,SAACC,GAAD,OAAO,EAAKF,SAAL,eAAgBE,EAAEC,OAAOC,KAAO5C,EAAM0C,EAAEC,OAAOE,U,EAErEC,WAAa,SAACD,GAAD,OAAW,GAAKA,EAAMtC,QAAUsC,EAAMtC,QAAU,I,wEAEnD,IAAD,OACH6B,EAAQW,KAAKZ,MAAMC,MACnBC,EAAQU,KAAKZ,MAAME,MACnBW,EAAWD,KAAKD,WAAWV,IAAUW,KAAKD,WAAWT,GAEzD,OACE,yBAAKY,UAAU,8BACb,0BAAMA,UAAU,YAAhB,UACA,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,uBAAuBC,IAAKC,IAASC,IAAI,GAAGC,MAAM,KAAKC,OAAO,OAC7E,wBAAIL,UAAU,cACZ,kBAAC,eAAD,KACG,CACCM,GAAI,qCACJC,GAAI,4GAIV,uBAAGP,UAAU,mBACX,kBAAC,eAAD,KACG,CACCM,GAAI,uHACJC,GAAI,+TAKZ,0BAAMP,UAAU,eACd,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,mBACX,kBAAC,eAAD,KACG,CACCM,GAAI,kGACJC,GAAI,mQAMZ,yBAAKP,UAAU,yBACb,2BAAOQ,KAAK,OAAOb,KAAK,QAAQc,YAAiC,OAApBX,KAAKZ,MAAMG,KAAgB,6CAAY,YAAaqB,UAAQ,EACvGC,SAAU,SAAClB,GAAD,OAAO,EAAKD,aAAaC,IACnCO,UAAWF,KAAKD,WAAWV,IAAoB,KAAVA,EAAe,eAAiB,4BACvE,yBAAKa,UAAU,+BAAf,aAGF,yBAAKA,UAAU,yBACb,2BAAOQ,KAAK,OAAOb,KAAK,QAAQc,YAAiC,OAApBX,KAAKZ,MAAMG,KAAgB,yDAAc,iBAAkBqB,UAAQ,EAC9GC,SAAU,SAAClB,GAAD,OAAO,EAAKD,aAAaC,IACnCO,UAAWF,KAAKD,WAAWT,IAAoB,KAAVA,EAAe,eAAiB,4BACvE,yBAAKY,UAAU,+BAAf,aAEF,kBAAC,IAAD,CAAMA,UAAWD,EACX,wCACA,iDACFa,GAAE,8BAAyBzB,EAAzB,YAAkCC,IACtC,kBAAC,eAAD,KACC,CACCkB,GAAI,6BACJC,GAAI,6DAKV,kBAAC,YAAD,CAAWlB,KAAMS,KAAKZ,MAAMG,Y,GA7EjBwB,a,gDC8BJC,EArCC,kBACd,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAC,EAAA,0DAIJ/C,OAAOgD,SAJH,wBAKAC,EAAO,IAAIC,IAAKlD,OAAOgD,UALvB,kBASEhD,OAAOgD,SAASG,SATlB,OAWJN,EAAQI,GAXJ,gDAaJH,EAAO,EAAD,IAbF,gCAiBC9C,OAAOiD,MAERA,EAAOjD,OAAOiD,KACpBG,QAAQC,IAAI,2BACZR,EAAQI,IAIRH,EAAO,IAAIQ,MAAM,4BAzBX,yDAAZ,0DCSaC,EAZU,uCAAG,WAAON,EAAMO,GAAb,mBAAAT,EAAA,sEAGFE,EAAKQ,IAAIC,IAAIC,QAHX,cAGpBC,EAHoB,OAIpBC,EAAkBL,EAAmBM,SAASF,GAAWG,QAGzDC,EAAW,IAAIf,EAAKQ,IAAIQ,SAAST,EAAmBU,IAAKL,GAPrC,kBASnBG,GATmB,2CAAH,wD,sGCmBnBG,E,2MACJpD,MAAQ,CACNC,MAAO,GACPC,MAAO,GACPmD,MAAO,UACPC,OAAQ,6CACRC,YAAa,IAAIC,MAAQC,mBAAmB,SAC5CtD,KAAM,M,EAGRC,kB,sBAAoB,0CAAA4B,EAAA,yDAClB,EAAK3B,SAAS,CAACF,KAAMP,IAAa,KAAO,EAAKI,MAAMG,OAE9CuD,EAAS,EAAKC,MAAMC,MAAMF,QAG5B,EAAKG,WANS,uBAOhB,EAAKxD,SAAS,CAAEJ,MAAO1B,EAAQmF,EAAOzD,OAAQC,MAAO3B,EAAQmF,EAAOxD,SAPpD,mDAaG0B,IAbH,cAaVM,EAbU,iBAcOA,EAAKQ,IAAIoB,cAdhB,eAcVC,EAdU,iBAeOvB,EAAoBN,EAAMO,GAfjC,eAeVuB,EAfU,OAiBVC,EAAKC,EAAoBR,EAAOO,IAjBtB,UAkBUD,EAASG,QAAQC,aAAaH,GAAII,KAAK,CAAEC,KAAMP,EAAS,KAlBlE,eAkBVQ,EAlBU,iBAmBMrC,EAAKQ,IAAI8B,sBAAsBd,EAAOJ,QAnB5C,eAmBVmB,EAnBU,iBAoBIvC,EAAKQ,IAAIgC,SAASD,EAAQE,aApB9B,QAoBVC,EApBU,OAsBhB,EAAKvE,SAAS,CACZJ,MAAO1B,EAAQgG,EAAYtE,MAAMV,QAAQ,QAAQ,KACjDW,MAAO3B,EAAQgG,EAAYrE,MAAMX,QAAQ,QAAQ,KACjD8D,MAAOK,EAAOO,GACdX,OAAQI,EAAOJ,OACfC,WAAa,IAAIC,KAAuB,IAAlBoB,EAAMC,WAAmBpB,mBAAmB,WA3BpD,kDA+BhBqB,MAAM,KAAEC,QAAS1C,QAAQ2C,MAAR,OA/BD,0D,EAmCpBnB,SAAW,iBAAgC,uCAA1B,EAAKF,MAAMC,MAAMqB,M,wEAGhC,IAAMpB,EAAWjD,KAAKiD,WACtB,OACE,yBAAK/C,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,uBAAuBC,IAAKmE,IAAYjE,IAAI,GAAGC,MAAM,MAAMC,OAAO,OAC/E0C,EAAW,sCAAkB,GAC/B,wBAAI/C,UAAU,aAAY,0BAAMqE,KAAK,WAAX,4BAC1B,wBAAIrE,UAAU,aAAd,oCAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,uBAAGA,UAAU,yBAAwB,0BAAMqE,KAAK,WAAWvE,KAAKZ,MAAMC,SAExE,yBAAKa,UAAU,YACb,mCAEF,yBAAKA,UAAU,YACb,uBAAGA,UAAU,yBAAwB,0BAAMqE,KAAK,WAAWvE,KAAKZ,MAAME,UAG1E,yBAAKY,UAAU,OACb,yBAAKA,UAAU,OACb,yDAA8B,0BAAMA,UAAU,yBAAwB,0BAAMqE,KAAK,WAAWvE,KAAKZ,MAAMuD,aAAyB,6BAAhI,mEAGJ,yBAAKzC,UAAU,YACb,yBAAKA,UAAU,aACf,yBAAKA,UAAU,sBACb,gCAAYA,UAAU,mBACpB,uBAAGA,UAAU,QAAb,qBACA,4BAAQA,UAAU,gCAEhB+C,EACI,6BAAMjD,KAAKZ,MAAMsD,QACjB,uBAAG3D,KAAI,kCAA6BiB,KAAKZ,MAAMsD,QAAU9C,OAAO,SAAS4E,IAAI,uBAC1ExE,KAAKZ,MAAMsD,UAKtB,gCAAYxC,UAAU,mBACpB,uBAAGA,UAAU,QAAb,mBACA,4BAAQA,UAAU,gCAAgCF,KAAKZ,MAAMqD,SAGjE,yBAAKvC,UAAU,YACb,yBAAKC,IAAKsE,IAAQpE,IAAI,qBAAqBC,MAAM,MAAMC,OAAO,SAEhE,yBAAKL,UAAU,cAEjB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,uBAAuBC,IAAKuE,IAAerE,IAAI,GAAGC,MAAM,MAAMC,OAAO,WAM5F,yBAAKL,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,uBAAGA,UAAU,aACX,kBAAC,eAAD,KACC,CACCM,GAAI,0BACJC,GAAI,gGAIR,yBAAKP,UAAU,QACb,wBAAIA,UAAU,OACZ,wBAAIA,UAAU,YACZ,uBAAGnB,KJnIjB,gDAAN,OAba,gBAab,oBADgB,QAChB,iBAAwFZ,IAAxF,yBAAkHA,KImItEyB,OAAO,SAAS4E,IAAI,sBAAsBtE,UAAU,gBAAe,yBAAKC,IAAKwE,IAAatE,IAAI,GAAGC,MAAM,KAAKC,OAAO,SAE7I,wBAAIL,UAAU,YACZ,uBAAGnB,KJhIjB,yCAAN,OAFab,0EAEb,qBADiB,kCACjB,gBAAiFC,KIgIrCyB,OAAO,SAAS4E,IAAI,sBAAsBtE,UAAU,gBAAe,yBAAKC,IAAKyE,IAAYvE,IAAI,GAAGC,MAAM,KAAKC,OAAO,SAE5I,wBAAIL,UAAU,YACZ,uBAAGnB,KAAMH,IAAcgB,OAAO,SAAS4E,IAAI,sBAAsBtE,UAAU,gBAAe,yBAAKC,IAAK0E,IAASxE,IAAI,GAAGC,MAAM,KAAKC,OAAO,aAM9I0C,EACE,yBAAK/C,UAAU,YACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,CAAMA,UAAU,wCACdY,GAAE,iBAAY7D,EAAM+C,KAAKZ,MAAMC,OAA7B,YAAuCpC,EAAM+C,KAAKZ,MAAME,SAC1D,kBAAC,eAAD,KACC,CACCkB,GAAI,OACJC,GAAI,oBAMZ,KAIR,kBAAC,YAAD,CAAWlB,KAAMS,KAAKZ,MAAMG,Y,GA3JVwB,aAiKpBuC,EAAsB,SAACwB,GAAD,OAASC,OAAOpH,EAAQmH,EAAInG,QAAQ,MAAO,MAnKpD,IAmKyE,GAE7E6D,IC/JAwC,EAvBM,uCAAG,WAAOC,EAAavB,GAApB,iCAAAtC,EAAA,6DAA0BtB,EAA1B,+BAAgC,EAAhC,gCACJmF,EAAYC,YAAY,CAAExB,OAAM5D,UAD5B,cAChBqF,EADgB,OAGtB1D,QAAQC,IAAI,iBAAmByD,GAC/B1D,QAAQC,IAAIuD,GAERG,EAAU,CACZ1B,OACA2B,KAAMJ,EAAYK,YAClBH,IAAKA,EAAM,IACXI,SAAU,KACVzF,SAXoB,UAcAmF,EAAYO,KAAKJ,GAdjB,WAchBvB,EAdgB,OAgBtBpC,QAAQC,IAAImC,GAEPA,EAAQ4B,UAlBS,uBAkBQ,IAAI9D,MAAM,8BAlBlB,iCAoBfkC,GApBe,4CAAH,wDCWf6B,E,2MACJtG,MAAQ,CACNuG,SAAS,EACTC,QAAQ,EACRvG,MAAO,GACPC,MAAO,GACPmD,MAAO,GACPC,OAAQ,GACRnD,KAAM,M,EAURG,aAAe,SAACC,GAAD,OAAO,EAAKF,SAAL,eAAgBE,EAAEC,OAAOC,KAAO5C,EAAM0C,EAAEC,OAAOE,U,EAErE+F,Y,sBAAc,4CAAAzE,EAAA,6DACR,EAAKhC,MAAMwG,SACPzI,EAAI,EAAKiC,MACff,OAAOC,SAASS,KAAhB,uBAAuC5B,EAAEsF,MAAzC,YAAkDtF,EAAEuF,SAH1C,SAOV,EAAKjD,SAAS,CAACkG,SAAS,IAPd,SAQS3E,IART,cAQJM,EARI,gBASaA,EAAKQ,IAAIoB,cATtB,cASJC,EATI,iBAUavB,EAAoBN,EAAMO,GAVvC,eAUJuB,EAVI,OAYJ/D,EAAQyG,EAAY,EAAK1G,MAAMC,OAC/BC,EAAQwG,EAAY,EAAK1G,MAAME,OAb3B,UAcQ8D,EAASG,QAAQwC,MAAMtC,KAAK,CAAEC,KAAMP,EAAS,KAdrD,eAcJ6C,EAdI,OAgBJf,EAAc7B,EAASG,QAAQ0C,iBAAiB5G,EAAOC,GAhBnD,UAiBY0F,EAAgBC,EAAa9B,EAAS,GAAI6C,GAjBtD,QAiBJnC,EAjBI,OAmBV,EAAKpE,SAAS,CACZmG,QAAQ,EACRD,SAAS,EACTlD,MAAM,KAAD,OAAOxF,EAAM4G,EAAQqC,OAAOC,OAAOC,aAAaC,gBACrD3D,OAAQmB,EAAQyC,kBAChB,WACAC,SAASC,eAAe,oBAAoBC,WAzBpC,kDA6BV,EAAKhH,SAAS,CAACkG,SAAS,IACxBzB,MAAM,KAAEC,QAAS1C,QAAQ2C,MAAR,OA9BP,0D,mFARZpE,KAAKP,SAAS,CAACF,KAAMP,IAAa,KAAOgB,KAAKZ,MAAMG,OAEpD,IAAMuD,EAAS9C,KAAK+C,MAAMC,MAAMF,OAChC9C,KAAKP,SAAS,CAACJ,MAAOyD,EAAOzD,MAAOC,MAAOwD,EAAOxD,U,+BAuC1C,IAAD,OACP,OACE,yBAAKY,UAAU,aACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,cACZ,kBAAC,eAAD,KACC,CACCM,GAAI,kCACJC,GAAI,+EAKV,0BAAMP,UAAU,eACd,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,mBACX,kBAAC,eAAD,KACC,CACCM,GAAI,wCACJC,GAAI,uJAKV,yBAAKP,UAAU,yBACXF,KAAKZ,MAAMwG,QAAU5F,KAAKZ,MAAMuG,QAC9B,2BAAOjF,KAAK,OAAOR,UAAU,eAAeJ,MAAOnC,EAAQqC,KAAKZ,MAAMC,OAAQqH,UAAQ,IACtF,2BAAOhG,KAAK,OAAOb,KAAK,QAAQK,UAAU,eACxCJ,MAAOnC,EAAQqC,KAAKZ,MAAMC,OAAQwB,SAAU,SAAClB,GAAD,OAAO,EAAKD,aAAaC,OAG7E,yBAAKO,UAAU,yBACXF,KAAKZ,MAAMwG,QAAU5F,KAAKZ,MAAMuG,QAC9B,2BAAOjF,KAAK,OAAOR,UAAU,eAAeJ,MAAOnC,EAAQqC,KAAKZ,MAAME,OAAQoH,UAAQ,IACtF,2BAAOhG,KAAK,OAAOb,KAAK,QAAQK,UAAU,eACxCJ,MAAOnC,EAAQqC,KAAKZ,MAAME,OAAQuB,SAAU,SAAClB,GAAD,OAAO,EAAKD,aAAaC,OAG7E,yBAAKO,UAAU,kBACb,uBAAGA,UAAU,mBACX,kBAAC,eAAD,KACG,CACCM,GAAI,0CACJC,GAAI,6HAGR,6BACA,uCACA,kBAAC,eAAD,KACG,CACCD,GAAI,0BACJC,GAAI,mFAGR,uBAAGP,UAAU,aAAYnB,KAAK,wBAAuB,6CACrD,kBAAC,eAAD,KACG,CACCyB,GAAI,sGACJC,GAAI,yPAIV,uBAAGP,UAAU,mBACX,kBAAC,eAAD,KACG,CACCM,GAAI,4HACJC,GAAI,yWAKVT,KAAKZ,MAAMuG,QACT,4BAAQzF,UAAY,6CAA6CyG,UAAQ,GACvE,0BAAMzG,UAAU,mCAAmC0G,KAAK,SAASC,cAAY,SAC7E,kBAAC,eAAD,KACG,CACCrG,GAAI,aACJC,GAAI,2BAIV,4BAAQP,UAAY,6CAA6C4G,QAAW,SAACnH,GAAD,OAAO,EAAKkG,YAAYlG,KAChGK,KAAKZ,MAAMwG,OACW,OAApB5F,KAAKZ,MAAMG,KAAgB,uCAAW,mBAClB,OAApBS,KAAKZ,MAAMG,KAAgB,yDAAc,0BAGnD,kBAAC,IAAD,CAAMwH,GAAG,mBAAmB7G,UAAU,SAASY,GAAE,uBAAkBd,KAAKZ,MAAMqD,MAA7B,YAAsCzC,KAAKZ,MAAMsD,SAAlG,qBAGF,kBAAC,YAAD,CAAWnD,KAAMS,KAAKZ,MAAMG,Y,GAhJZwB,aAsJlB+E,EAAc,SAAChB,GAAD,kBAAcA,EAAIkC,SAAS,GAAI,OAEpCtB,IC7IAuB,E,iLAbX,OACE,kBAAC,IAAD,CAAQC,SAAUC,8BAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO9C,KAAK,qCAAqC+C,UAAW5E,IAC5D,kBAAC,IAAD,CAAO6B,KAAK,2BAA2B+C,UAAW5E,IAClD,kBAAC,IAAD,CAAO6B,KAAK,wBAAwB+C,UAAW1B,IAC/C,kBAAC,IAAD,CAAOrB,KAAK,IAAI+C,UAAWjI,U,GARnB4B,aCHlBsG,IAASC,OAAO,kBAAC,EAAD,MAASf,SAASC,eAAe,W","file":"static/js/main.69b9971c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.57c400b8.png\";","module.exports = __webpack_public_path__ + \"static/media/gorgeous-line-top.ff1db429.png\";","module.exports = __webpack_public_path__ + \"static/media/gorgeous-line-bottom.d1162595.png\";","module.exports = __webpack_public_path__ + \"static/media/certificate-stamp.dd99316c.png\";","module.exports = __webpack_public_path__ + \"static/media/facebook-icon.1102b5b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-icon.a1223de5.svg\";","module.exports = __webpack_public_path__ + \"static/media/mail-icon.46bb5905.svg\";","// Ref: https://gist.github.com/valentinkostadinov/5875467\nconst toHex = (str) => {\n    // utf8 to latin1\n    var s = unescape(encodeURIComponent(str))\n    var h = ''\n    for (var i = 0; i < s.length; i++) {\n        h += s.charCodeAt(i).toString(16)\n    }\n    return h\n}\n\nconst fromHex = (h) => {\n    var s = ''\n    for (var i = 0; i < h.length; i+=2) {\n        s += String.fromCharCode(parseInt(h.substr(i, 2), 16))\n    }\n\n    return decodeURIComponent(escape(s))\n}\n\nexport { toHex, fromHex }\n","const APP_ID = 2593999254169138\nconst TWEET_TXT = 'I issued a marriage certificate on Blockchain. Check out my certificate'\nconst ML_SUBJECT = 'I issued a marriage certificate on Blockchain'\n\nconst builURL = () => {\n  const l = window.location\n  const appName = l.pathname.split('/')[1]\n  return encodeURIComponent(`${l.origin}/${appName}/?p=/${l.pathname.replace(`/${appName}/`,'')}`)\n}\n\nconst buildFBLink = () => {\n  const appID = APP_ID\n  const display = 'popup'\n  return `https://www.facebook.com/dialog/share?app_id=${appID}&display=${display}&href=${builURL()}&redirect_uri=${builURL()}`\n}\n\nconst buildTWLink = () => {\n  const text = TWEET_TXT\n  const hashtags = 'blockchain,marriage,certificate'\n  return `https://twitter.com/intent/tweet?text=${text}&hashtags=${hashtags}&url=${builURL()}`\n}\n\nconst buildMLink = () => {\n  const subject = encodeURIComponent(ML_SUBJECT)\n  const body = encodeURIComponent(`${TWEET_TXT}: ${window.location.href}`)\n  return `mailto:?Subject=${subject}&body=${body}`\n}\n\nconst redirectRoot = (condition) => {\n  if (condition) window.location.href = \"/\"\n}\n\nconst langIsJa = () => window.navigator.language === \"ja\"\n\nexport { redirectRoot, buildFBLink, buildTWLink, buildMLink, langIsJa }\n","import React, { Component } from \"react\"\nimport { Determinator, MultiLang } from \"react-multi-language\"\n\nimport { Link } from \"react-router-dom\"\nimport { toHex } from \"../utils/hex\"\nimport { langIsJa } from \"../utils/common\"\n\nimport IconImg from \"../images/icon.png\"\n\nclass Home extends Component {\n  state = {\n    bride: '',\n    groom: '',\n    lang: 'en',\n  }\n\n  componentDidMount = () => this.setState({lang: langIsJa() ? 'ja' : this.state.lang})\n\n  handleChange = (e) => this.setState({[e.target.name]: toHex(e.target.value)})\n\n  validation = (value) => 1 <= value.length && value.length <= 64\n\n  render() {\n    let bride = this.state.bride\n    let groom = this.state.groom\n    let canIssue = this.validation(bride) && this.validation(groom)\n\n    return (\n      <div className=\"container ribbon14-wrapper\">\n        <span className=\"ribbon14\">♡</span>\n        <div className=\"py-5 text-center\">\n          <img className=\"d-block mx-auto mb-4\" src={IconImg} alt=\"\" width=\"72\" height=\"72\"/>\n          <h1 className=\"text-white\">\n            <Determinator>\n              {{\n                en: 'Marriage certificate on Blockchain',\n                ja: 'ブロックチェーンで婚約証明書を発行'\n              }}\n            </Determinator>\n          </h1>\n          <p className=\"lead text-white\">\n            <Determinator>\n              {{\n                en: 'Blockchain prove your marriage forever even you go. Issue marriage certificate for everybody even sexual minorities.',\n                ja: 'ブロックチェーン上にあなた方の婚約を永遠に記録します。いかなるセクシャルマイノリティーでも発行可能です。'\n              }}\n            </Determinator>\n          </p>\n        </div>\n        <form className=\"form-signin\">\n          <div className=\"text-center mb-4\">\n            <p className=\"lead text-white\">\n              <Determinator>\n                {{\n                  en: \"We are going to show you a sample certificate.Please tell us your name and your partner's name.\",\n                  ja: '証明書のサンプルを発行します。あなたのお名前と、パートナーのお名前を教えてください。'\n                }}\n              </Determinator>\n            </p>\n          </div>\n\n          <div className=\"form-label-group mb-2\">\n            <input type=\"text\" name=\"bride\" placeholder={this.state.lang === 'ja' ? \"あなたのお名前\" : \"Your Name\"} required\n              onChange={(e) => this.handleChange(e)}\n              className={this.validation(bride) || bride === '' ? \"form-control\" : \"is-invalid form-control\"}/>\n            <div className=\"invalid-feedback text-white\">Too Long</div>\n          </div>\n\n          <div className=\"form-label-group mb-4\">\n            <input type=\"text\" name=\"groom\" placeholder={this.state.lang === 'ja' ? \"パートナーのお名前\" : \"Partner's Name\"} required\n              onChange={(e) => this.handleChange(e)}\n              className={this.validation(groom) || groom === '' ? \"form-control\" : \"is-invalid form-control\"}/>\n            <div className=\"invalid-feedback text-white\">Too Long</div>\n          </div>\n          <Link className={canIssue\n              ? 'btn btn-lg btn-block btn-outline-pink'\n              : 'btn btn-lg btn-block btn-outline-pink disabled'\n            } to={`/certificate/sample/${bride}/${groom}`}>\n            <Determinator>\n            {{\n              en: 'Issue Sample Certification',\n              ja: 'サンプル証明書発行'\n            }}\n            </Determinator>\n          </Link>\n        </form>\n        <MultiLang lang={this.state.lang}/>\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise(async (resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    // window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        reject(new Error('Please install metamask'));\n        // const provider = new Web3.providers.HttpProvider(\n        //   \"http://127.0.0.1:8545\"\n        // );\n        // const web3 = new Web3(provider);\n        // console.log(\"No web3 instance injected, using Local web3.\");\n        // resolve(web3);\n      }\n    // });\n  });\n\nexport default getWeb3;\n","const getContractInstance = async (web3, contractDefinition) => {\n\n  // get network ID and the deployed address\n  const networkId = await web3.eth.net.getId()\n  const deployedAddress = contractDefinition.networks[networkId].address\n\n  // create the instance\n  const instance = new web3.eth.Contract(contractDefinition.abi, deployedAddress)\n\n  return instance\n}\n\nexport default getContractInstance\n","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Determinator, MultiLang } from \"react-multi-language\"\n\nimport contractDefinition from \"../contracts/MarriageCertificateIssuer.json\"\nimport getWeb3 from \"../utils/getWeb3\"\nimport getContractInstance from '../utils/getContractInstance'\nimport { buildFBLink, buildTWLink, buildMLink, langIsJa } from \"../utils/common\"\nimport { toHex, fromHex } from \"../utils/hex\"\n\nimport LineTopImg from \"../images/gorgeous-line-top.png\"\nimport LineBottomImg from \"../images/gorgeous-line-bottom.png\"\nimport CerImg from \"../images/certificate-stamp.png\"\nimport FacebookImg from \"../images/facebook-icon.svg\"\nimport TwitterImg from \"../images/twitter-icon.svg\"\nimport MailImg from \"../images/mail-icon.svg\"\n\nconst PREFIX_NUM = 20000000\n\nclass Certificate extends Component {\n  state = {\n    bride: '',\n    groom: '',\n    cerID: '0x00000',\n    txHash: '0x0000000000000000000000000000000000000000',\n    issuedDate: (new Date()).toLocaleDateString('en-US'),\n    lang: 'en',\n  }\n\n  componentDidMount = async () => {\n    this.setState({lang: langIsJa() ? 'ja' : this.state.lang})\n\n    const params = this.props.match.params\n\n    // Sample Page\n    if (this.isSample()) {\n      this.setState({ bride: fromHex(params.bride), groom: fromHex(params.groom) })\n      return\n    }\n\n    // Real Page\n    try {\n      const web3 = await getWeb3()\n      const accounts = await web3.eth.getAccounts()\n      const contract = await getContractInstance(web3, contractDefinition)\n\n      const id = decodeCertificateID(params.id)\n      const certificate = await contract.methods.certificates(id).call({ from: accounts[0] })\n      const receipt = await web3.eth.getTransactionReceipt(params.txHash)\n      const block = await web3.eth.getBlock(receipt.blockNumber)\n\n      this.setState({\n        bride: fromHex(certificate.bride.replace(/^0x0*/,'')),\n        groom: fromHex(certificate.groom.replace(/^0x0*/,'')),\n        cerID: params.id,\n        txHash: params.txHash,\n        issuedDate: (new Date(block.timestamp * 1000)).toLocaleDateString('en-US'),\n      })\n\n    } catch (e) {\n      alert(e.message, console.error(e))\n    }\n  }\n\n  isSample = () => this.props.match.path === '/certificate/sample/:bride/:groom/'\n\n  render() {\n    const isSample = this.isSample()\n    return (\n      <div className=\"bg-white\">\n        <div className=\"container py-5\">\n          <div className=\"cross-line text-center my-2 mx-2\">\n            <div className=\"row mt-3\">\n              <div className=\"col\">\n                <img className=\"d-block mx-auto mb-4\" src={LineTopImg} alt=\"\" width=\"300\" height=\"50\"/>\n                { isSample ? <h3>Sample</h3> : ''}\n                <h1 className=\"text-pink\"><font face=\"cursive\">Certificate of Marriage</font></h1>\n                <h3 className=\"text-pink\">Recorded forever in Blockchain</h3>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-5\">\n                <p className=\"lead mx-4 border-line\"><font face=\"cursive\">{this.state.bride}</font></p>\n              </div>\n              <div className=\"col-md-2\">\n                <p>And</p>\n              </div>\n              <div className=\"col-md-5\">\n                <p className=\"lead mx-4 border-line\"><font face=\"cursive\">{this.state.groom}</font></p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <p>Were United in Marriage on <code className=\"border-line text-dark\"><font face=\"cursive\">{this.state.issuedDate}</font></code><br/>This Certificate was Recored in a Smart Contract of Ethereum.</p>\n              </div>\n            </div>\n            <div className=\"row mb-5\">\n              <div className=\"col-md-1\"></div>\n              <div className=\"col-md-8 text-left\">\n                <blockquote className=\"blockquote ml-2\">\n                  <p className=\"mb-0\">Transaction Hash:</p>\n                  <footer className=\"blockquote-footer break-word\">\n                  {\n                    isSample\n                      ? <div>{this.state.txHash}</div>\n                      : <a href={`https://etherscan.io/tx/${this.state.txHash}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                          {this.state.txHash}\n                        </a>\n                  }\n                  </footer>\n                </blockquote>\n                <blockquote className=\"blockquote ml-2\">\n                  <p className=\"mb-0\">Certificate ID:</p>\n                  <footer className=\"blockquote-footer break-word\">{this.state.cerID}</footer>\n                </blockquote>\n              </div>\n              <div className=\"col-md-2\">\n                <img src={CerImg} alt=\"certificates stamp\" width=\"130\" height=\"150\"/>\n              </div>\n              <div className=\"col-md-1\"></div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <img className=\"d-block mx-auto mb-4\" src={LineBottomImg} alt=\"\" width=\"270\" height=\"40\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"pink lighten-1\">\n          <div className=\"container\">\n            <div className=\"row text-white\">\n              <div className=\"col\">\n                <p className=\"lead my-1\">\n                  <Determinator>\n                  {{\n                    en: 'Share with your partner',\n                    ja: 'パートナーにシェアしましょう。'\n                  }}\n                  </Determinator>\n                </p>\n                <nav className=\"mb-2\">\n                  <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                      <a href={buildFBLink()} target=\"_blank\" rel=\"noopener noreferrer\" className=\"nav-link sns\"><img src={FacebookImg} alt=\"\" width=\"40\" height=\"40\"/></a>\n                    </li>\n                    <li className=\"nav-item\">\n                      <a href={buildTWLink()} target=\"_blank\" rel=\"noopener noreferrer\" className=\"nav-link sns\"><img src={TwitterImg} alt=\"\" width=\"40\" height=\"40\"/></a>\n                    </li>\n                    <li className=\"nav-item\">\n                      <a href={buildMLink()} target=\"_blank\" rel=\"noopener noreferrer\" className=\"nav-link sns\"><img src={MailImg} alt=\"\" width=\"40\" height=\"40\"/></a>\n                    </li>\n                  </ul>\n                </nav>\n              </div>\n            </div>\n            { isSample\n              ? <div className=\"row mb-2\">\n                  <div className=\"col\">\n                    <Link className=\"btn btn-lg btn-block btn-outline-pink\"\n                      to={`/issue/${toHex(this.state.bride)}/${toHex(this.state.groom)}`}>\n                      <Determinator>\n                      {{\n                        en: 'Next',\n                        ja: '次へ'\n                      }}\n                      </Determinator>\n                    </Link>\n                  </div>\n                </div>\n              : ''\n             }\n          </div>\n        </div>\n        <MultiLang lang={this.state.lang}/>\n      </div>\n    )\n  }\n}\n\nconst decodeCertificateID = (hex) => Number(fromHex(hex.replace(/^0x/, \"\"))) - PREFIX_NUM - 1\n\nexport default Certificate\n","const sendTransaction = async (transaction, from, value=0, web3) => {\n  const gas = await transaction.estimateGas({ from, value })\n\n  console.log(\"Estimaged Gas:\" + gas)\n  console.log(transaction)\n\n  let options = {\n    from,\n    data: transaction.encodeABI(),\n    gas: gas + 10000,\n    gasPrice: 10000000000,\n    value\n  }\n\n  const receipt = await transaction.send(options)\n\n  console.log(receipt)\n\n  if (!receipt.blockHash) throw new Error('Failed to send transaction')\n\n  return receipt;\n}\n\nexport default sendTransaction\n","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Determinator, MultiLang } from \"react-multi-language\"\n\nimport contractDefinition from \"../contracts/MarriageCertificateIssuer.json\"\nimport getWeb3 from \"../utils/getWeb3\"\nimport getContractInstance from '../utils/getContractInstance'\nimport sendTransaction from '../utils/sendTransaction'\nimport { toHex, fromHex } from \"../utils/hex\"\nimport { langIsJa } from \"../utils/common\"\n\nclass IssuePage extends Component {\n  state = {\n    issuing: false,\n    issued: false,\n    bride: '',\n    groom: '',\n    cerID: '',\n    txHash: '',\n    lang: 'en',\n  }\n\n  componentDidMount() {\n    this.setState({lang: langIsJa() ? 'ja' : this.state.lang})\n\n    const params = this.props.match.params\n    this.setState({bride: params.bride, groom: params.groom})\n  }\n\n  handleChange = (e) => this.setState({[e.target.name]: toHex(e.target.value)})\n\n  handleClick = async () => {\n    if (this.state.issued) {\n      const s = this.state\n      window.location.href = `/certificate/${s.cerID}/${s.txHash}`\n    }\n\n    try {\n      this.setState({issuing: true})\n      const web3 = await getWeb3()\n      const accounts = await web3.eth.getAccounts()\n      const contract = await getContractInstance(web3, contractDefinition)\n\n      const bride = padTo32byte(this.state.bride)\n      const groom = padTo32byte(this.state.groom)\n      const fee = await contract.methods.FEE().call({ from: accounts[0] })\n\n      const transaction = contract.methods.issueCertificate(bride, groom)\n      const receipt = await sendTransaction(transaction, accounts[0], fee)\n\n      this.setState({\n        issued: true,\n        issuing: false,\n        cerID: `0x${toHex(receipt.events.Issued.returnValues.certificateID)}`,\n        txHash: receipt.transactionHash\n      },() => {\n        document.getElementById('show-certificate').click()\n      })\n\n    } catch (e) {\n      this.setState({issuing: false})\n      alert(e.message, console.error(e))\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"py-4 text-center\">\n          <h1 className=\"text-white\">\n            <Determinator>\n            {{\n              en: 'Issue Real Marriage Certificate',\n              ja: '本物の証明書を発行します'\n            }}\n            </Determinator>\n          </h1>\n        </div>\n        <form className=\"form-signin\">\n          <div className=\"text-left mb-4\">\n            <p className=\"lead text-white\">\n              <Determinator>\n              {{\n                en: \"Confirm your and your partner's name.\",\n                ja: 'あなたとパートーナーのお名前を確認してください。'\n              }}\n              </Determinator>\n            </p>\n          </div>\n          <div className=\"form-label-group mb-2\">\n            { this.state.issued || this.state.issuing\n              ? <input type=\"text\" className=\"form-control\" value={fromHex(this.state.bride)} readOnly/>\n              : <input type=\"text\" name=\"bride\" className=\"form-control\"\n                  value={fromHex(this.state.bride)} onChange={(e) => this.handleChange(e)} />\n            }\n          </div>\n          <div className=\"form-label-group mb-4\">\n            { this.state.issued || this.state.issuing\n              ? <input type=\"text\" className=\"form-control\" value={fromHex(this.state.groom)} readOnly/>\n              : <input type=\"text\" name=\"groom\" className=\"form-control\"\n                  value={fromHex(this.state.groom)} onChange={(e) => this.handleChange(e)} />\n            }\n          </div>\n          <div className=\"text-left mb-4\">\n            <p className=\"lead text-white\">\n              <Determinator>\n                {{\n                  en: 'Issue marriage certificate on Ethereum.',\n                  ja: '婚約証明書をイーサリアム上に発行します。'\n                }}\n              </Determinator>\n              <br/>\n              <u>0.02 ETH</u>\n              <Determinator>\n                {{\n                  en: ' is issuance fee. And, ',\n                  ja: 'が発行手数料です。そして、'\n                }}\n              </Determinator>\n              <a className=\"text-white\"href=\"https://metamask.io/\"><strong>MetaMask</strong></a>\n              <Determinator>\n                {{\n                  en: ' is required. Please install in advance. Then please make sure that enough ETH have been deposited.',\n                  ja: 'が必要です。事前にインストールしてください。また、十分な量のETHを入金してください。'\n                }}\n              </Determinator>\n            </p>\n            <p className=\"lead text-white\">\n              <Determinator>\n                {{\n                  en: 'If you have prepared, please click the following button. It may take few minutes for issuing. Sorry for keeping you wait.',\n                  ja: '準備ができたら下のボタンを押してください。場合によっては、発行に数分かかります。ご不便をおかけして申し訳ございません。'\n                }}\n              </Determinator>\n            </p>\n          </div>\n          { this.state.issuing\n            ? <button className = \"btn btn-lg btn-block btn-outline-pink mb-4\" disabled>\n                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                <Determinator>\n                  {{\n                    en: 'Issuing...',\n                    ja: '発行中...'\n                  }}\n                </Determinator>\n              </button>\n            : <button className = \"btn btn-lg btn-block btn-outline-pink mb-4\" onClick = {(e) => this.handleClick(e)}>\n                { this.state.issued\n                  ? this.state.lang === 'ja' ? '証明書を見る' : 'View Certificate'\n                  : this.state.lang === 'ja' ? '本物の証明書を発行' : 'Issue Real Certificate'}\n              </button>\n          }\n          <Link Id=\"show-certificate\" className=\"d-none\" to={`/certificate/${this.state.cerID}/${this.state.txHash}`}>Show Certificate\n          </Link>\n        </form>\n        <MultiLang lang={this.state.lang}/>\n      </div>\n    )\n  }\n}\n\nconst padTo32byte = (hex) => `0x${hex.padStart(64, '0')}`\n\nexport default IssuePage\n","import React, { Component } from \"react\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nimport Home from './Home'\nimport Certificate from './Certificate'\nimport IssuePage from './IssuePage'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/certificate/sample/:bride/:groom/\" component={Certificate}/>\n          <Route path=\"/certificate/:id/:txHash\" component={Certificate}/>\n          <Route path=\"/issue/:bride/:groom/\" component={IssuePage}/>\n          <Route path=\"/\" component={Home}/>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}