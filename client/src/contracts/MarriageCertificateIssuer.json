{
  "contractName": "MarriageCertificateIssuer",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "certificates",
      "outputs": [
        {
          "name": "bride",
          "type": "bytes32"
        },
        {
          "name": "groom",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FEE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "certificateID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bride",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "groom",
          "type": "bytes32"
        }
      ],
      "name": "Issued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bride",
          "type": "bytes32"
        },
        {
          "name": "_groom",
          "type": "bytes32"
        }
      ],
      "name": "issueCertificate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "depositedFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bride\",\"type\":\"bytes32\"},{\"name\":\"_groom\",\"type\":\"bytes32\"}],\"name\":\"issueCertificate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"certificates\",\"outputs\":[{\"name\":\"bride\",\"type\":\"bytes32\"},{\"name\":\"groom\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"depositedFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FEE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"certificateID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bride\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"groom\",\"type\":\"bytes32\"}],\"name\":\"Issued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Issue marriage certificate. Don't issue as ERC720 for saving gas cost purpose. We don't assume to trasfer token\",\"methods\":{\"depositedFee()\":{\"details\":\"See accumulated fee by owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"issueCertificate(bytes32,bytes32)\":{\"details\":\"Issue marriage certificate\",\"params\":{\"_bride\":\"One persono name got married\",\"_groom\":\"The other persono name got married\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawFee(address)\":{\"details\":\"Withdraw accumulated fee by owner\"}},\"title\":\"MarriageCertificateIssuer\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/root/nodeworkspace/truffle/marriage-certificate-dapp/contracts/MarriageCertificateIssuer.sol\":\"MarriageCertificateIssuer\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/root/nodeworkspace/truffle/marriage-certificate-dapp/contracts/MarriageCertificateIssuer.sol\":{\"keccak256\":\"0x83a2071775429f385648adc8d14c634973452ae5eac954e338342ecdd265e3cb\",\"urls\":[\"bzzr://0f2017fdc3be30dd6cabe3a18a9f88397971a06574bdc6619aee29b34e3461fb\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\",\"urls\":[\"bzzr://4950def18270142a78d503ef6b7b13bdb053f2f050cee50c883cd7cab2bb02d7\"]}},\"version\":1}",
  "bytecode": "0x608060405266470de4df8200006001556301312d0060035561002e6100ee640100000000026401000000009004565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36100f6565b600033905090565b610a51806101056000396000f3fe608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631ac3ddeb1461009e57806357bcf883146100ef578063663b3e221461013b578063715018a6146101915780638da5cb5b146101a85780638f32d59b146101ff578063ac6b43931461022e578063c57981b514610259578063f2fde38b14610284575b600080fd5b3480156100aa57600080fd5b506100ed600480360360208110156100c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102d5565b005b6101256004803603604081101561010557600080fd5b8101908080359060200190929190803590602001909291905050506103ab565b6040518082815260200191505060405180910390f35b34801561014757600080fd5b506101746004803603602081101561015e57600080fd5b8101908080359060200190929190505050610501565b604051808381526020018281526020019250505060405180910390f35b34801561019d57600080fd5b506101a6610534565b005b3480156101b457600080fd5b506101bd61066f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020b57600080fd5b50610214610698565b604051808215151515815260200191505060405180910390f35b34801561023a57600080fd5b506102436106f6565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e61077c565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b506102d3600480360360208110156102a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610782565b005b6102dd610698565b1515610351576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600254905060006002819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103a6573d6000803e3d6000fd5b505050565b600060015434141515610426576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f53686f756c642070617920657861637420302e3032204554480000000000000081525060200191505060405180910390fd5b60006104946003546004604080519081016040528088815260200187815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010155505061080a90919063ffffffff16565b905060003490506104b08160025461080a90919063ffffffff16565b600281905550817f4fd8f6be195ba2870d47af2c8b625bf5d64911bc399223db6a330f1ab4cd3ddd8686604051808381526020018281526020019250505060405180910390a2819250505092915050565b60048181548110151561051057fe5b90600052602060002090600202016000915090508060000154908060010154905082565b61053c610698565b15156105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166106da610894565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6000610700610698565b1515610774576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600254905090565b60015481565b61078a610698565b15156107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6108078161089c565b50565b600080828401905083811015151561088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610967576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820570ec7baa1f54e7e04d39cde046b8c9f9ce26f00f38abab3b4a51c24aafcd3040029",
  "deployedBytecode": "0x608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631ac3ddeb1461009e57806357bcf883146100ef578063663b3e221461013b578063715018a6146101915780638da5cb5b146101a85780638f32d59b146101ff578063ac6b43931461022e578063c57981b514610259578063f2fde38b14610284575b600080fd5b3480156100aa57600080fd5b506100ed600480360360208110156100c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102d5565b005b6101256004803603604081101561010557600080fd5b8101908080359060200190929190803590602001909291905050506103ab565b6040518082815260200191505060405180910390f35b34801561014757600080fd5b506101746004803603602081101561015e57600080fd5b8101908080359060200190929190505050610501565b604051808381526020018281526020019250505060405180910390f35b34801561019d57600080fd5b506101a6610534565b005b3480156101b457600080fd5b506101bd61066f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020b57600080fd5b50610214610698565b604051808215151515815260200191505060405180910390f35b34801561023a57600080fd5b506102436106f6565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e61077c565b6040518082815260200191505060405180910390f35b34801561029057600080fd5b506102d3600480360360208110156102a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610782565b005b6102dd610698565b1515610351576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600254905060006002819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103a6573d6000803e3d6000fd5b505050565b600060015434141515610426576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f53686f756c642070617920657861637420302e3032204554480000000000000081525060200191505060405180910390fd5b60006104946003546004604080519081016040528088815260200187815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010155505061080a90919063ffffffff16565b905060003490506104b08160025461080a90919063ffffffff16565b600281905550817f4fd8f6be195ba2870d47af2c8b625bf5d64911bc399223db6a330f1ab4cd3ddd8686604051808381526020018281526020019250505060405180910390a2819250505092915050565b60048181548110151561051057fe5b90600052602060002090600202016000915090508060000154908060010154905082565b61053c610698565b15156105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166106da610894565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6000610700610698565b1515610774576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600254905090565b60015481565b61078a610698565b15156107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6108078161089c565b50565b600080828401905083811015151561088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610967576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820570ec7baa1f54e7e04d39cde046b8c9f9ce26f00f38abab3b4a51c24aafcd3040029",
  "sourceMap": "300:1647:0:-;;;406:17;385:38;;484:8;459:33;;707:12:4;:10;;;:12;;;:::i;:::-;698:6;;:21;;;;;;;;;;;;;;;;;;767:6;;;;;;;;;;;734:40;;763:1;734:40;;;;;;;;;;;;300:1647:0;;788:96:2;833:15;867:10;860:17;;788:96;:::o;300:1647:0:-;;;;;;;",
  "deployedSourceMap": "300:1647:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1627:159;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1627:159:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1627:159:0;;;;;;;;;;;;;;;;;;;;;;1145:414;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1145:414:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;631:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;631:33:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;631:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1642:137:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1642:137:4;;;;;;857:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;857:77:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1208:92:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1849:96:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1849:96:0;;;;;;;;;;;;;;;;;;;;;;;385:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;385:38:0;;;;;;;;;;;;;;;;;;;;;;;1928:107:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1928:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1928:107:4;;;;;;;;;;;;;;;;;;;;;;1627:159:0;1061:9:4;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1698:15:0;1716:8;;1698:26;;1745:1;1734:8;:12;;;;1756:5;:14;;:23;1771:7;1756:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1756:23:0;1117:1:4;1627:159:0;:::o;1145:414::-;1238:7;927:3;;914:9;:16;906:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1258:21;1282:108;1383:6;;1282:12;1300:77;;;;;;;;;1333:6;1300:77;;;;1360:6;1300:77;;;1282:96;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1282:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:100;;:108;;;;:::i;:::-;1258:132;;1401:14;1418:9;1401:26;;1448:20;1461:6;1448:8;;:12;;:20;;;;:::i;:::-;1437:8;:31;;;;1491:13;1484:37;1506:6;1514;1484:37;;;;;;;;;;;;;;;;;;;;;;;;1539:13;1532:20;;;;1145:414;;;;:::o;631:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1642:137:4:-;1061:9;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1740:1;1703:40;;1724:6;;;;;;;;;;;1703:40;;;;;;;;;;;;1770:1;1753:6;;:19;;;;;;;;;;;;;;;;;;1642:137::o;857:77::-;895:7;921:6;;;;;;;;;;;914:13;;857:77;:::o;1208:92::-;1248:4;1287:6;;;;;;;;;;;1271:22;;:12;:10;:12::i;:::-;:22;;;1264:29;;1208:92;:::o;1849:96:0:-;1904:7;1061:9:4;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1930:8:0;;1923:15;;1849:96;:::o;385:38::-;;;;:::o;1928:107:4:-;1061:9;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:28;2019:8;2000:18;:28::i;:::-;1928:107;:::o;834:176:3:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;788:96:2:-;833:15;867:10;860:17;;788:96;:::o;2136:225:4:-;2229:1;2209:22;;:8;:22;;;;2201:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2318:8;2289:38;;2310:6;;;;;;;;;;;2289:38;;;;;;;;;;;;2346:8;2337:6;;:17;;;;;;;;;;;;;;;;;;2136:225;:::o",
  "source": "pragma solidity 0.5.0;\n\nimport '@openzeppelin/contracts/ownership/Ownable.sol';\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\n/**\n * @title MarriageCertificateIssuer\n * @dev Issue marriage certificate.\n * Don't issue as ERC720 for saving gas cost purpose. We don't assume to trasfer token\n */\ncontract MarriageCertificateIssuer is Ownable {\n    using SafeMath for uint256;\n\n    uint256 public FEE = 20000000000000000;\n    uint256 private deposits;\n    uint256 private prefix = 20000000;\n\n    struct Certificate {\n        bytes32 bride;\n        bytes32 groom;\n    }\n\n    // Certificate ID range is 20000001 to 4294967295\n    Certificate[] public certificates;\n\n    /**\n     * @dev Emitted when certificate issued\n     */\n    event Issued (uint256 indexed certificateID, bytes32 bride, bytes32 groom);\n\n    /**\n     * @dev Reverts if fee is not same as FEE\n     */\n    modifier confirmFee() {\n        require(msg.value == FEE, \"Should pay exact 0.02 ETH\");\n        _;\n    }\n\n    /**\n     * @dev Issue marriage certificate\n     * @param _bride One persono name got married\n     * @param _groom The other persono name got married\n     */\n    function issueCertificate(bytes32 _bride, bytes32 _groom) public confirmFee payable returns (uint256) {\n\n        uint256 certificateID = certificates.push(Certificate({\n            bride: _bride,\n            groom: _groom\n        })).add(prefix);\n\n        uint256 amount = msg.value;\n        deposits = deposits.add(amount);\n\n        emit Issued(certificateID, _bride, _groom);\n\n        return certificateID;\n    }\n\n    /**\n     * @dev Withdraw accumulated fee by owner\n     */\n    function withdrawFee(address payable payee) public onlyOwner {\n        uint256 payment = deposits;\n        deposits = 0;\n        payee.transfer(payment);\n    }\n\n    /**\n     * @dev See accumulated fee by owner\n     */\n    function depositedFee() public view onlyOwner returns (uint256) {\n        return deposits;\n    }\n}\n",
  "sourcePath": "/root/nodeworkspace/truffle/marriage-certificate-dapp/contracts/MarriageCertificateIssuer.sol",
  "ast": {
    "absolutePath": "/root/nodeworkspace/truffle/marriage-certificate-dapp/contracts/MarriageCertificateIssuer.sol",
    "exportedSymbols": {
      "MarriageCertificateIssuer": [
        122
      ]
    },
    "id": 123,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 123,
        "sourceUnit": 508,
        "src": "24:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 123,
        "sourceUnit": 394,
        "src": "80:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 507,
              "src": "338:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$507",
                "typeString": "contract Ownable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "338:7:0"
          }
        ],
        "contractDependencies": [
          206,
          507
        ],
        "contractKind": "contract",
        "documentation": "@title MarriageCertificateIssuer\n@dev Issue marriage certificate.\nDon't issue as ERC720 for saving gas cost purpose. We don't assume to trasfer token",
        "fullyImplemented": true,
        "id": 122,
        "linearizedBaseContracts": [
          122,
          507,
          206
        ],
        "name": "MarriageCertificateIssuer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "contractScope": null,
              "id": 6,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 393,
              "src": "358:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$393",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "352:27:0",
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 11,
            "name": "FEE",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "385:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "385:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3230303030303030303030303030303030",
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "406:17:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000000000000_by_1",
                "typeString": "int_const 20000000000000000"
              },
              "value": "20000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "deposits",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "429:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "429:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16,
            "name": "prefix",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "459:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "459:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3230303030303030",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "484:8:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000_by_1",
                "typeString": "int_const 20000000"
              },
              "value": "20000000"
            },
            "visibility": "private"
          },
          {
            "canonicalName": "MarriageCertificateIssuer.Certificate",
            "id": 21,
            "members": [
              {
                "constant": false,
                "id": 18,
                "name": "bride",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "528:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 17,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "name": "groom",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "551:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 19,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "551:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Certificate",
            "nodeType": "StructDefinition",
            "scope": 122,
            "src": "499:72:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "certificates",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "631:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Certificate_$21_storage_$dyn_storage",
              "typeString": "struct MarriageCertificateIssuer.Certificate[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 22,
                "name": "Certificate",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 21,
                "src": "631:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Certificate_$21_storage_ptr",
                  "typeString": "struct MarriageCertificateIssuer.Certificate"
                }
              },
              "id": 23,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "631:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Certificate_$21_storage_$dyn_storage_ptr",
                "typeString": "struct MarriageCertificateIssuer.Certificate[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when certificate issued",
            "id": 32,
            "name": "Issued",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": true,
                  "name": "certificateID",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "745:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "name": "bride",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "776:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "name": "groom",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "791:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "744:61:0"
            },
            "src": "731:75:0"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "896:82:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 35,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "914:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "914:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 37,
                          "name": "FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "927:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "914:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53686f756c642070617920657861637420302e303220455448",
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "932:27:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e95c41ca2df255ed538f90adfde04544515d936ac66ebaf1ebe842848c74147f",
                          "typeString": "literal_string \"Should pay exact 0.02 ETH\""
                        },
                        "value": "Should pay exact 0.02 ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e95c41ca2df255ed538f90adfde04544515d936ac66ebaf1ebe842848c74147f",
                          "typeString": "literal_string \"Should pay exact 0.02 ETH\""
                        }
                      ],
                      "id": 34,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        525,
                        526
                      ],
                      "referencedDeclaration": 526,
                      "src": "906:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "906:54:0"
                },
                {
                  "id": 42,
                  "nodeType": "PlaceholderStatement",
                  "src": "970:1:0"
                }
              ]
            },
            "documentation": "@dev Reverts if fee is not same as FEE",
            "id": 44,
            "name": "confirmFee",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "893:2:0"
            },
            "src": "874:104:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1247:312:0",
              "statements": [
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "name": "certificateID",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "1258:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1258:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 67,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "prefix",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1383:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 60,
                                "name": "_bride",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "1333:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 61,
                                "name": "_groom",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "1360:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 59,
                              "name": "Certificate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "1300:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Certificate_$21_storage_ptr_$",
                                "typeString": "type(struct MarriageCertificateIssuer.Certificate storage pointer)"
                              }
                            },
                            "id": 62,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "bride",
                              "groom"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "1300:77:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Certificate_$21_memory",
                              "typeString": "struct MarriageCertificateIssuer.Certificate memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Certificate_$21_memory",
                              "typeString": "struct MarriageCertificateIssuer.Certificate memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 57,
                            "name": "certificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "1282:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Certificate_$21_storage_$dyn_storage",
                              "typeString": "struct MarriageCertificateIssuer.Certificate storage ref[] storage ref"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1282:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Certificate_$21_storage_$returns$_t_uint256_$",
                            "typeString": "function (struct MarriageCertificateIssuer.Certificate storage ref) returns (uint256)"
                          }
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1282:96:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 233,
                      "src": "1282:100:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1282:108:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1258:132:0"
                },
                {
                  "assignments": [
                    69
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "1401:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1401:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 72,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 70,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 522,
                      "src": "1418:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1418:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1401:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "deposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1437:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1461:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 74,
                          "name": "deposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1448:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 233,
                        "src": "1448:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1448:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1437:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:31:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "certificateID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1491:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "_bride",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1506:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "_groom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1514:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 80,
                      "name": "Issued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1484:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32,bytes32)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "EmitStatement",
                  "src": "1479:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 86,
                    "name": "certificateID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56,
                    "src": "1539:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 54,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "1532:20:0"
                }
              ]
            },
            "documentation": "@dev Issue marriage certificate\n@param _bride One persono name got married\n@param _groom The other persono name got married",
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 51,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 50,
                  "name": "confirmFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 44,
                  "src": "1210:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1210:10:0"
              }
            ],
            "name": "issueCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "name": "_bride",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1171:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1171:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "name": "_groom",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1187:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1170:32:0"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1238:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1237:9:0"
            },
            "scope": 122,
            "src": "1145:414:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1688:98:0",
              "statements": [
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "name": "payment",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "1698:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1698:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 99,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 98,
                    "name": "deposits",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "1716:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1698:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "deposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1734:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1745:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1734:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1734:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1771:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1756:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1756:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:23:0"
                }
              ]
            },
            "documentation": "@dev Withdraw accumulated fee by owner",
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 94,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 93,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 440,
                  "src": "1678:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1678:9:0"
              }
            ],
            "name": "withdrawFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1648:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1647:23:0"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1688:0:0"
            },
            "scope": 122,
            "src": "1627:159:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1913:32:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 118,
                    "name": "deposits",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "1930:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 119,
                  "nodeType": "Return",
                  "src": "1923:15:0"
                }
              ]
            },
            "documentation": "@dev See accumulated fee by owner",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 114,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 113,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 440,
                  "src": "1885:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1885:9:0"
              }
            ],
            "name": "depositedFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1870:2:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1904:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1903:9:0"
            },
            "scope": 122,
            "src": "1849:96:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 123,
        "src": "300:1647:0"
      }
    ],
    "src": "0:1948:0"
  },
  "legacyAST": {
    "absolutePath": "/root/nodeworkspace/truffle/marriage-certificate-dapp/contracts/MarriageCertificateIssuer.sol",
    "exportedSymbols": {
      "MarriageCertificateIssuer": [
        122
      ]
    },
    "id": 123,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 123,
        "sourceUnit": 508,
        "src": "24:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 123,
        "sourceUnit": 394,
        "src": "80:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 507,
              "src": "338:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$507",
                "typeString": "contract Ownable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "338:7:0"
          }
        ],
        "contractDependencies": [
          206,
          507
        ],
        "contractKind": "contract",
        "documentation": "@title MarriageCertificateIssuer\n@dev Issue marriage certificate.\nDon't issue as ERC720 for saving gas cost purpose. We don't assume to trasfer token",
        "fullyImplemented": true,
        "id": 122,
        "linearizedBaseContracts": [
          122,
          507,
          206
        ],
        "name": "MarriageCertificateIssuer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "contractScope": null,
              "id": 6,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 393,
              "src": "358:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$393",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "352:27:0",
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 11,
            "name": "FEE",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "385:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "385:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3230303030303030303030303030303030",
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "406:17:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000000000000_by_1",
                "typeString": "int_const 20000000000000000"
              },
              "value": "20000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "deposits",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "429:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "429:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16,
            "name": "prefix",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "459:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "459:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3230303030303030",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "484:8:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000_by_1",
                "typeString": "int_const 20000000"
              },
              "value": "20000000"
            },
            "visibility": "private"
          },
          {
            "canonicalName": "MarriageCertificateIssuer.Certificate",
            "id": 21,
            "members": [
              {
                "constant": false,
                "id": 18,
                "name": "bride",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "528:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 17,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "name": "groom",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "551:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 19,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "551:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Certificate",
            "nodeType": "StructDefinition",
            "scope": 122,
            "src": "499:72:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "certificates",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "631:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Certificate_$21_storage_$dyn_storage",
              "typeString": "struct MarriageCertificateIssuer.Certificate[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 22,
                "name": "Certificate",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 21,
                "src": "631:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Certificate_$21_storage_ptr",
                  "typeString": "struct MarriageCertificateIssuer.Certificate"
                }
              },
              "id": 23,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "631:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Certificate_$21_storage_$dyn_storage_ptr",
                "typeString": "struct MarriageCertificateIssuer.Certificate[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when certificate issued",
            "id": 32,
            "name": "Issued",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": true,
                  "name": "certificateID",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "745:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "name": "bride",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "776:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "name": "groom",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "791:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "744:61:0"
            },
            "src": "731:75:0"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "896:82:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 35,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "914:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "914:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 37,
                          "name": "FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "927:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "914:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53686f756c642070617920657861637420302e303220455448",
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "932:27:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e95c41ca2df255ed538f90adfde04544515d936ac66ebaf1ebe842848c74147f",
                          "typeString": "literal_string \"Should pay exact 0.02 ETH\""
                        },
                        "value": "Should pay exact 0.02 ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e95c41ca2df255ed538f90adfde04544515d936ac66ebaf1ebe842848c74147f",
                          "typeString": "literal_string \"Should pay exact 0.02 ETH\""
                        }
                      ],
                      "id": 34,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        525,
                        526
                      ],
                      "referencedDeclaration": 526,
                      "src": "906:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "906:54:0"
                },
                {
                  "id": 42,
                  "nodeType": "PlaceholderStatement",
                  "src": "970:1:0"
                }
              ]
            },
            "documentation": "@dev Reverts if fee is not same as FEE",
            "id": 44,
            "name": "confirmFee",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "893:2:0"
            },
            "src": "874:104:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1247:312:0",
              "statements": [
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "name": "certificateID",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "1258:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1258:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 67,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "prefix",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1383:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 60,
                                "name": "_bride",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "1333:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 61,
                                "name": "_groom",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "1360:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 59,
                              "name": "Certificate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "1300:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Certificate_$21_storage_ptr_$",
                                "typeString": "type(struct MarriageCertificateIssuer.Certificate storage pointer)"
                              }
                            },
                            "id": 62,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "bride",
                              "groom"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "1300:77:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Certificate_$21_memory",
                              "typeString": "struct MarriageCertificateIssuer.Certificate memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Certificate_$21_memory",
                              "typeString": "struct MarriageCertificateIssuer.Certificate memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 57,
                            "name": "certificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "1282:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Certificate_$21_storage_$dyn_storage",
                              "typeString": "struct MarriageCertificateIssuer.Certificate storage ref[] storage ref"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1282:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Certificate_$21_storage_$returns$_t_uint256_$",
                            "typeString": "function (struct MarriageCertificateIssuer.Certificate storage ref) returns (uint256)"
                          }
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1282:96:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 233,
                      "src": "1282:100:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1282:108:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1258:132:0"
                },
                {
                  "assignments": [
                    69
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "1401:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1401:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 72,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 70,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 522,
                      "src": "1418:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1418:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1401:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "deposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1437:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1461:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 74,
                          "name": "deposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1448:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 233,
                        "src": "1448:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1448:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1437:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:31:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "certificateID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1491:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "_bride",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1506:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "_groom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1514:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 80,
                      "name": "Issued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1484:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32,bytes32)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "EmitStatement",
                  "src": "1479:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 86,
                    "name": "certificateID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56,
                    "src": "1539:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 54,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "1532:20:0"
                }
              ]
            },
            "documentation": "@dev Issue marriage certificate\n@param _bride One persono name got married\n@param _groom The other persono name got married",
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 51,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 50,
                  "name": "confirmFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 44,
                  "src": "1210:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1210:10:0"
              }
            ],
            "name": "issueCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "name": "_bride",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1171:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1171:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "name": "_groom",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1187:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1170:32:0"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1238:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1237:9:0"
            },
            "scope": 122,
            "src": "1145:414:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1688:98:0",
              "statements": [
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "name": "payment",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "1698:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1698:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 99,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 98,
                    "name": "deposits",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "1716:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1698:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "deposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1734:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1745:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1734:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1734:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1771:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1756:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1756:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:23:0"
                }
              ]
            },
            "documentation": "@dev Withdraw accumulated fee by owner",
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 94,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 93,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 440,
                  "src": "1678:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1678:9:0"
              }
            ],
            "name": "withdrawFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1648:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1647:23:0"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1688:0:0"
            },
            "scope": 122,
            "src": "1627:159:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1913:32:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 118,
                    "name": "deposits",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "1930:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 119,
                  "nodeType": "Return",
                  "src": "1923:15:0"
                }
              ]
            },
            "documentation": "@dev See accumulated fee by owner",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 114,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 113,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 440,
                  "src": "1885:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1885:9:0"
              }
            ],
            "name": "depositedFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1870:2:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1904:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1903:9:0"
            },
            "scope": 122,
            "src": "1849:96:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 123,
        "src": "300:1647:0"
      }
    ],
    "src": "0:1948:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x4fd8f6be195ba2870d47af2c8b625bf5d64911bc399223db6a330f1ab4cd3ddd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "certificateID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "bride",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "groom",
              "type": "bytes32"
            }
          ],
          "name": "Issued",
          "type": "event",
          "signature": "0x4fd8f6be195ba2870d47af2c8b625bf5d64911bc399223db6a330f1ab4cd3ddd"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x5Cd20dad95864Ffb78eb90697342f4C261A7Aae2",
      "transactionHash": "0x22a79e073f4ccb5718e0b32a02eda75c59beac267c10435cc250735feed39dea"
    },
    "4": {
      "events": {
        "0x4fd8f6be195ba2870d47af2c8b625bf5d64911bc399223db6a330f1ab4cd3ddd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "certificateID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "bride",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "groom",
              "type": "bytes32"
            }
          ],
          "name": "Issued",
          "type": "event",
          "signature": "0x4fd8f6be195ba2870d47af2c8b625bf5d64911bc399223db6a330f1ab4cd3ddd"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x1C590aaE8F510663641D79cae4070a351094C38a",
      "transactionHash": "0x53147d750ee15816817e689c4c8bbcd06a825a25c7a75c2f4508d411ff58806f"
    },
    "15": {
      "events": {
        "0x4fd8f6be195ba2870d47af2c8b625bf5d64911bc399223db6a330f1ab4cd3ddd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "certificateID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "bride",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "groom",
              "type": "bytes32"
            }
          ],
          "name": "Issued",
          "type": "event",
          "signature": "0x4fd8f6be195ba2870d47af2c8b625bf5d64911bc399223db6a330f1ab4cd3ddd"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x929d44720F60774C279d6e444bAE1B773aEC17A0",
      "transactionHash": "0xddac406c202fa8b7227a6040408d928318456e9bcef3b6b094fbc604d3b8a3bc"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2020-01-01T08:40:19.609Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Issue marriage certificate. Don't issue as ERC720 for saving gas cost purpose. We don't assume to trasfer token",
    "methods": {
      "depositedFee()": {
        "details": "See accumulated fee by owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "issueCertificate(bytes32,bytes32)": {
        "details": "Issue marriage certificate",
        "params": {
          "_bride": "One persono name got married",
          "_groom": "The other persono name got married"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawFee(address)": {
        "details": "Withdraw accumulated fee by owner"
      }
    },
    "title": "MarriageCertificateIssuer"
  },
  "userdoc": {
    "methods": {}
  }
}